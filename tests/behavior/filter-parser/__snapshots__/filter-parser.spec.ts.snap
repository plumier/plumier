// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter Parser Conditional Filter Should parse gt filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "gt",
        "value": "3",
      },
    },
  ],
]
`;

exports[`Filter Parser Conditional Filter Should parse gte filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "gte",
        "value": "3",
      },
    },
  ],
]
`;

exports[`Filter Parser Conditional Filter Should parse lt filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "lt",
        "value": "3",
      },
    },
  ],
]
`;

exports[`Filter Parser Conditional Filter Should parse lte filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "lte",
        "value": "3",
      },
    },
  ],
]
`;

exports[`Filter Parser Conditional Filter Should validate type 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "GTE >= filter only applicable on date and number filed",
      ],
      "path": Array [
        "filter",
        "age",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Conditional Filter Should validate value 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into Number",
      ],
      "path": Array [
        "filter",
        "age",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Equal Filter Should parse equal filter on type boolean properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "active": Object {
        "type": "equal",
        "value": true,
      },
    },
  ],
]
`;

exports[`Filter Parser Equal Filter Should parse equal filter on type date properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "dob": Object {
        "type": "equal",
        "value": DATE NOW,
      },
    },
  ],
]
`;

exports[`Filter Parser Equal Filter Should parse equal filter on type number properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "name": Object {
        "type": "equal",
        "value": 12345,
      },
    },
  ],
]
`;

exports[`Filter Parser Equal Filter Should parse equal filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "name": Object {
        "type": "equal",
        "value": "mimi",
      },
    },
  ],
]
`;

exports[`Filter Parser Equal Filter Should validate filter properly 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into Number",
      ],
      "path": Array [
        "filter",
        "name",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Not Equal Filter Should parse ne filter on boolean properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "ne",
        "value": true,
      },
    },
  ],
]
`;

exports[`Filter Parser Not Equal Filter Should parse ne filter on date properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "ne",
        "value": DATE NOW,
      },
    },
  ],
]
`;

exports[`Filter Parser Not Equal Filter Should parse ne filter on number properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "ne",
        "value": 3,
      },
    },
  ],
]
`;

exports[`Filter Parser Not Equal Filter Should parse ne filter on string data properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "ne",
        "value": "3",
      },
    },
  ],
]
`;

exports[`Filter Parser Partial Filter Should not allowed on type other than string 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Partial filter only applicable on string field",
      ],
      "path": Array [
        "filter",
        "name",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Partial Filter Should parse partial filter at both properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "name": Object {
        "partial": "both",
        "type": "partial",
        "value": "mimi",
      },
    },
  ],
]
`;

exports[`Filter Parser Partial Filter Should parse partial filter at the end properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "name": Object {
        "partial": "end",
        "type": "partial",
        "value": "mimi",
      },
    },
  ],
]
`;

exports[`Filter Parser Partial Filter Should parse partial filter at the start properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "name": Object {
        "partial": "start",
        "type": "partial",
        "value": "mimi",
      },
    },
  ],
]
`;

exports[`Filter Parser Range Filter Should not allow data type other than number and date 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Range filter only applicable on date and number filed",
      ],
      "path": Array [
        "filter",
        "name",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Range Filter Should parse date range filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "birthDate": Object {
        "type": "range",
        "value": Array [
          DATE NOW,
          DATE NOW,
        ],
      },
    },
  ],
]
`;

exports[`Filter Parser Range Filter Should parse iso date range filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "birthDate": Object {
        "type": "range",
        "value": Array [
          DATE NOW,
          DATE NOW,
        ],
      },
    },
  ],
]
`;

exports[`Filter Parser Range Filter Should parse number range filter properly 1`] = `
Array [
  Array [
    0,
    50,
    User {
      "age": Object {
        "type": "range",
        "value": Array [
          1,
          3,
        ],
      },
    },
  ],
]
`;

exports[`Filter Parser Range Filter Should validate date value properly 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into date",
      ],
      "path": Array [
        "filter",
        "birthDate",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Range Filter Should validate number value properly 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into number",
      ],
      "path": Array [
        "filter",
        "age",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Range Filter Should validate right hand date value properly 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into date",
      ],
      "path": Array [
        "filter",
        "birthDate",
      ],
    },
  ],
  "status": 422,
}
`;

exports[`Filter Parser Range Filter Should validate right hand number value properly 1`] = `
Object {
  "message": Array [
    Object {
      "messages": Array [
        "Unable to convert \\"lorem\\" into number",
      ],
      "path": Array [
        "filter",
        "age",
      ],
    },
  ],
  "status": 422,
}
`;
