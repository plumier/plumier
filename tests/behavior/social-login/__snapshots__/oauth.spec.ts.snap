// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Durability Should show proper error when internal OAuth server error occur 1`] = `
Object {
  "profile": Object {
    "message": "Bad Request",
    "status": 400,
  },
  "status": 400,
}
`;

exports[`Durability Should throw error when no Client ID provided 1`] = `
Array [
  Array [
    "OAuth: Client id for Googol not provided",
  ],
]
`;

exports[`Durability Should throw error when no Client SECRET provided 1`] = `
Array [
  Array [
    "OAuth: Client secret for MazeBook not provided",
  ],
]
`;

exports[`Durability Should throw error when no redirect uri provided 1`] = `
Array [
  Array [
    "OAuth: No MazeBook redirect uri handler found",
  ],
]
`;

exports[`Durability Should throw error when provided non GET redirect uri 1`] = `
Array [
  Array [
    "OAuth: Redirect uri must have GET http method on AnimalController.callback",
  ],
]
`;

exports[`Durability Should throw error when provided redirect uri with parameter 1`] = `
Array [
  Array [
    "OAuth: Parameterized route is not supported on Googol callback uri",
  ],
]
`;

exports[`OAuth 1.0a Should login properly 1`] = `
Object {
  "authUrl": "",
  "cookie": "",
  "profile": Object {
    "email": "Josianne_Bosco@gmail.com",
    "family_name": "Erdman",
    "firstName": "I Ketut Manuel",
    "given_name": "Greta",
    "id": "54f483f9-9b50-4c15-b53f-46ece9e3e5f8",
    "lastName": "Auer",
    "locale": "en",
    "name": "I Ketut Manuel Auer",
    "picture": "http://lorempixel.com/640/480",
    "provider": "Teeter",
  },
  "status": 200,
}
`;

exports[`OAuth 2.0 Should able add extra profile params 1`] = `
Object {
  "profile": Object {
    "email": "Josianne_Bosco@gmail.com",
    "family_name": "Erdman",
    "firstName": "I Ketut Manuel",
    "given_name": "Greta",
    "id": "54f483f9-9b50-4c15-b53f-46ece9e3e5f8",
    "lastName": "Auer",
    "locale": "en",
    "name": "I Ketut Manuel Auer",
    "picture": "http://lorempixel.com/640/480",
    "provider": "MazeBook",
    "query": Object {
      "dolor": "sit",
      "lorem": "ipsum",
    },
  },
  "status": 200,
}
`;

exports[`OAuth 2.0 Should able to bind the oauth access_token 1`] = `
Object {
  "access_token": "secret",
  "provider": "MazeBook",
  "refresh_token": "very secret",
}
`;

exports[`OAuth 2.0 Should able to bind the raw profile 1`] = `
Object {
  "email": "Josianne_Bosco@gmail.com",
  "family_name": "Erdman",
  "given_name": "Greta",
  "id": "54f483f9-9b50-4c15-b53f-46ece9e3e5f8",
  "locale": "en",
  "name": "I Ketut Manuel Auer",
  "picture": "http://lorempixel.com/640/480",
  "provider": "MazeBook",
  "query": Object {},
}
`;

exports[`OAuth 2.0 Should able to distinguish global callback and specific callback 1`] = `
Object {
  "profile": Object {
    "lorem": "ipsum",
  },
  "status": 200,
}
`;

exports[`OAuth 2.0 Should able to send postMessage UI 1`] = `
"
    <!DOCTYPE html>
    <html>
        <title></title>
        <body>
            <div class=\\"container\\"></div>
            <script type=\\"text/javascript\\">
                
                var origin ;
                (function(){
                    window.onbeforeunload = function () {
                        window.opener.postMessage({ status: \\"Close\\" }, origin || window.location.origin);
                    };
                    window.opener.postMessage(JSON.parse(message), origin || window.location.origin);
                })()
            </script>
        </body>
    </html>
    "
`;

exports[`OAuth 2.0 Should able to set postMessage origin 1`] = `
"
    <!DOCTYPE html>
    <html>
        <title></title>
        <body>
            <div class=\\"container\\"></div>
            <script type=\\"text/javascript\\">
                
                var origin = 'http://localhost';
                (function(){
                    window.onbeforeunload = function () {
                        window.opener.postMessage({ status: \\"Close\\" }, origin || window.location.origin);
                    };
                    window.opener.postMessage(JSON.parse(message), origin || window.location.origin);
                })()
            </script>
        </body>
    </html>
    "
`;

exports[`OAuth 2.0 Should attach proper redirect URI on login url 1`] = `"http://localhost/auth/callback"`;

exports[`OAuth 2.0 Should login properly 1`] = `
Object {
  "authUrl": "",
  "cookie": "",
  "profile": Object {
    "email": "Josianne_Bosco@gmail.com",
    "family_name": "Erdman",
    "firstName": "I Ketut Manuel",
    "given_name": "Greta",
    "id": "54f483f9-9b50-4c15-b53f-46ece9e3e5f8",
    "lastName": "Auer",
    "locale": "en",
    "name": "I Ketut Manuel Auer",
    "picture": "http://lorempixel.com/640/480",
    "provider": "MazeBook",
    "query": Object {},
  },
  "status": 200,
}
`;

exports[`OAuth 2.0 Should login properly 2`] = `
Object {
  "authUrl": "",
  "cookie": "",
  "profile": Object {
    "email": "Josianne_Bosco@gmail.com",
    "family_name": "Erdman",
    "firstName": "I Ketut Manuel",
    "given_name": "Greta",
    "id": "54f483f9-9b50-4c15-b53f-46ece9e3e5f8",
    "lastName": "Auer",
    "locale": "en",
    "name": "I Ketut Manuel Auer",
    "picture": "http://lorempixel.com/640/480",
    "provider": "Googol",
    "query": Object {},
  },
  "status": 200,
}
`;

exports[`OAuth 2.0 Should save CSRF secret on cookie and CSRF token on state parameter 1`] = `"plum-oauth:csrf-secret=; path=/; httponly"`;

exports[`OAuth 2.0 Should save provider on cookie 1`] = `"plum-oauth:provider=MazeBook; path=/; httponly"`;

exports[`Virtual Routes Should print virtual routes properly 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. AuthController.callback(user) -> GET /auth/callback",
  ],
  Array [
    "2. FakeOAuth2Facility            -> GET /auth/mazebook/login",
  ],
  Array [
    "3. FakeOAuth2Facility            -> GET /auth/googol/login",
  ],
  Array [
    "4. FakeOAuth10aFacility          -> GET /auth/teeter/login",
  ],
  Array [],
]
`;

exports[`Virtual Routes Should provide proper route information for swagger 1`] = `
Array [
  Array [
    Object {
      "access": "Public",
      "kind": "VirtualRoute",
      "method": "get",
      "openApiOperation": Object {
        "description": "Redirect request to MazeBook login page. This endpoint writes CSRF token on the client required to generate MazeBook login endpoint",
        "parameters": Array [
          Object {},
        ],
        "tags": Array [
          "Social Login",
        ],
      },
      "overridable": false,
      "provider": FakeOAuth2Facility,
      "url": "/auth/mazebook/login",
    },
  ],
]
`;
