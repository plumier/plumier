// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CRUD CRUD Function Should find by query GET /users?offset&limit 1`] = `
Array [
  Object {
    "email": "jane.doe@gmail.com",
    "id": 1,
    "name": "John Doe",
  },
]
`;

exports[`CRUD CRUD Function Should set partial validation on GET /users?offset&limit 1`] = `
Array [
  Object {
    "email": "jane.dane@gmail.com",
    "id": 1,
    "name": "John Doe",
  },
]
`;

exports[`CRUD Nested CRUD One to Many Function Should find by query GET /users/:parentId/animals?offset&limit 1`] = `
Array [
  Object {
    "id": 1,
    "name": "Jojo",
    "user": Object {
      "email": "john.doe@gmail.com",
      "id": 1,
      "name": "John Doe",
    },
  },
]
`;

exports[`CRUD Nested CRUD One to Many Function Should serve GET /users/:parentId/animals/:id 1`] = `
Object {
  "id": 1,
  "name": "Mimi",
  "user": Object {
    "email": "john.doe@gmail.com",
    "id": 1,
    "name": "John Doe",
  },
}
`;

exports[`CRUD Nested CRUD One to Many Function Should serve PATCH /users/:parentId/animals/:id 1`] = `
Animal {
  "id": 1,
  "name": "Poe",
}
`;

exports[`CRUD Nested CRUD One to Many Function Should serve POST /users/:parentId/animals 1`] = `
User {
  "animals": Array [
    Animal {
      "id": 1,
      "name": "Mimi",
    },
    Animal {
      "id": 2,
      "name": "Mimi",
    },
  ],
  "email": "john.doe@gmail.com",
  "id": 1,
  "name": "John Doe",
}
`;

exports[`CRUD Nested CRUD One to Many Function Should serve PUT /users/:parentId/animals/:id 1`] = `
Animal {
  "id": 1,
  "name": "Poe",
}
`;

exports[`CRUD Nested CRUD One to Many Function Should set partial validation GET /users/:parentId/animals?offset&limit 1`] = `
Array [
  Object {
    "id": 1,
    "name": "Jeje",
    "user": Object {
      "email": "john.doe@gmail.com",
      "id": 1,
      "name": "John Doe",
    },
  },
]
`;

exports[`CRUD Nested CRUD One to Many Function Should set partial validation on PATCH /users/:parentId/animals/:id 1`] = `
Animal {
  "id": 1,
  "name": "Poe",
}
`;

exports[`CRUD One To One Function Should able to add with ID 1`] = `
User {
  "animal": Animal {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One Function Should able to modify relation by ID 1`] = `
User {
  "animal": Animal {
    "id": 2,
    "name": "Bingo",
  },
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One Function Should not populated one to many 1`] = `
User {
  "animals": Array [
    Animal {
      "id": 1,
      "name": "Mimi",
    },
    Animal {
      "id": 2,
      "name": "Bingo",
    },
  ],
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One Function Should not populated one to many 2`] = `
Object {
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One Function Should populated multiple result 1`] = `
Array [
  Object {
    "animal": Object {
      "id": 1,
      "name": "Mimi",
    },
    "id": 1,
    "name": "John",
  },
  Object {
    "animal": Object {
      "id": 1,
      "name": "Mimi",
    },
    "id": 2,
    "name": "Jane",
  },
]
`;

exports[`CRUD One To One Function Should populated on get by id 1`] = `
Object {
  "animal": Object {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One Function Should populated on multiple property 1`] = `
Object {
  "animal": Object {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
  "secondAnimal": Object {
    "id": 2,
    "name": "Bingo",
  },
}
`;

exports[`CRUD One To One on Nested Object Should able to add with ID 1`] = `
User {
  "animal": Animal {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One on Nested Object Should able to modify relation by ID 1`] = `
User {
  "animal": Animal {
    "id": 2,
    "name": "Bingo",
  },
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One on Nested Object Should not populated one to many 1`] = `
User {
  "animals": Array [
    Animal {
      "id": 1,
      "name": "Mimi",
    },
    Animal {
      "id": 2,
      "name": "Bingo",
    },
  ],
  "id": 1,
  "name": "John",
}
`;

exports[`CRUD One To One on Nested Object Should not populated one to many 2`] = `
Object {
  "id": 1,
  "name": "John",
  "parent": Object {
    "id": 1,
    "name": "John",
  },
}
`;

exports[`CRUD One To One on Nested Object Should populated multiple result 1`] = `
Array [
  Object {
    "animal": Object {
      "id": 1,
      "name": "Mimi",
    },
    "id": 1,
    "name": "John",
    "parent": Object {
      "id": 1,
      "name": "John",
    },
  },
  Object {
    "animal": Object {
      "id": 2,
      "name": "Bingo",
    },
    "id": 2,
    "name": "Jane",
    "parent": Object {
      "id": 1,
      "name": "John",
    },
  },
]
`;

exports[`CRUD One To One on Nested Object Should populated on get by id 1`] = `
Object {
  "animal": Object {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
  "parent": Object {
    "id": 1,
    "name": "John",
  },
}
`;

exports[`CRUD One To One on Nested Object Should populated on multiple property 1`] = `
Object {
  "animal": Object {
    "id": 1,
    "name": "Mimi",
  },
  "id": 1,
  "name": "John",
  "parent": Object {
    "id": 1,
    "name": "John",
  },
  "secondAnimal": Object {
    "id": 2,
    "name": "Bingo",
  },
}
`;

exports[`Open API Should mark guid column as readonly 1`] = `
Object {
  "properties": Object {
    "id": Object {
      "readOnly": true,
      "type": "string",
    },
    "password": Object {
      "type": "string",
    },
    "userName": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Open API Should mark id column as readonly 1`] = `
Object {
  "properties": Object {
    "id": Object {
      "readOnly": true,
      "type": "number",
    },
    "password": Object {
      "type": "string",
    },
    "userName": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;
