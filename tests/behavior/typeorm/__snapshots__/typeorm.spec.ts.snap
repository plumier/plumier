// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeOrm Facility Should able load entity using absolute dir location 1`] = `
Array [
  "id",
  "name",
  "id",
  "name",
]
`;

exports[`TypeOrm Facility Should able to reflect entity properties 1`] = `
MyEntity {
  "id": 1,
  "num": 123,
}
`;

exports[`TypeOrm Facility Should able to reflect entity properties 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "num",
    "type": Number,
  },
]
`;

exports[`TypeOrm Facility Should able to reflect entity properties with inheritance 1`] = `
ChildEntity {
  "id": 1,
  "num": 123,
}
`;

exports[`TypeOrm Facility Should able to reflect entity properties with inheritance 2`] = `
Array [
  Object {
    "name": "num",
    "type": Number,
  },
  Object {
    "name": "id",
    "type": Number,
  },
]
`;

exports[`TypeOrm Facility Should able to reflect entity properties with type overridden 1`] = `
MyEntity {
  "id": 1,
  "num": 123,
}
`;

exports[`TypeOrm Facility Should able to reflect entity properties with type overridden 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "num",
    "type": Number,
  },
]
`;

exports[`TypeOrm Facility Should able to reflect many to many relation 1`] = `
MyEntity {
  "children": Array [
    Child {
      "id": 1,
      "name": "Poo",
    },
  ],
  "id": 1,
  "name": "Mimi",
}
`;

exports[`TypeOrm Facility Should able to reflect many to many relation 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "children",
    "type": Array [
      Child,
    ],
  },
]
`;

exports[`TypeOrm Facility Should able to reflect many to many relation 3`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "parents",
    "type": Array [
      MyEntity,
    ],
  },
]
`;

exports[`TypeOrm Facility Should able to reflect one to many relation 1`] = `
MyEntity {
  "children": Array [
    Child {
      "id": 1,
      "name": "Poo",
    },
  ],
  "id": 1,
  "name": "Mimi",
}
`;

exports[`TypeOrm Facility Should able to reflect one to many relation 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "children",
    "type": Array [
      Child,
    ],
  },
]
`;

exports[`TypeOrm Facility Should able to reflect one to many relation 3`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "entity",
    "type": MyEntity,
  },
]
`;

exports[`TypeOrm Facility Should able to reflect one to one relation 1`] = `
Parent {
  "entity": MyEntity {
    "id": 1,
    "name": "Poo",
  },
  "id": 1,
  "name": "Mimi",
}
`;

exports[`TypeOrm Facility Should able to reflect one to one relation 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "parent",
    "type": Parent,
  },
]
`;

exports[`TypeOrm Facility Should able to reflect one to one relation 3`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
  Object {
    "name": "name",
    "type": String,
  },
  Object {
    "name": "entity",
    "type": MyEntity,
  },
]
`;

exports[`TypeOrm Facility Should throw error when no option specified 1`] = `
Array [
  Array [
    [Error: No connection options were found in any orm configuration files.],
  ],
]
`;
