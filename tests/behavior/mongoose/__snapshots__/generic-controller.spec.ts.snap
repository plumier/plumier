// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeOrm CRUD Nested CRUD One to Many Function Should serve GET /users/:parentId/animals/:id 1`] = `
Object {
  "name": "Mimi",
}
`;

exports[`TypeOrm CRUD Nested CRUD One to Many Function Should serve GET /users/:parentId/animals?offset&limit 1`] = `
Array [
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
  Object {
    "name": "Mimi",
  },
]
`;

exports[`TypeOrm CRUD Nested CRUD One to Many Function Should serve PATCH /users/:parentId/animals/:id 1`] = `
Object {
  "__v": 0,
  "_id": "MONGODB UNIQUE ID",
  "name": "Poe",
}
`;

exports[`TypeOrm CRUD Nested CRUD One to Many Function Should serve POST /users/:parentId/animals 1`] = `
Object {
  "__v": 2,
  "_id": "MONGODB UNIQUE ID",
  "animals": Array [
    Object {
      "__v": 0,
      "_id": "MONGODB UNIQUE ID",
      "name": "Mimi",
    },
    Object {
      "__v": 0,
      "_id": "MONGODB UNIQUE ID",
      "name": "Mimi",
    },
  ],
  "email": "john.doe@gmail.com",
  "name": "John Doe",
}
`;

exports[`TypeOrm CRUD Nested CRUD One to Many Function Should serve PUT /users/:parentId/animals/:id 1`] = `
Object {
  "__v": 0,
  "_id": "MONGODB UNIQUE ID",
  "name": "Poe",
}
`;

exports[`TypeOrm CRUD Route Generator Should able to override route 1`] = `
Array [
  Array [
    "1. User -> User db.users",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    "2. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    "3. UsersController.get(id)                -> GET    /users/:id",
  ],
  Array [
    "4. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    "5. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    "6. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`TypeOrm CRUD Route Generator Should generate one to many routes 1`] = `
Array [
  Array [
    "1. Animal -> Animal db.animals",
  ],
  Array [
    "2. User   -> User   db.users",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DynamicType.list(offset, limit, query) -> GET    /animals",
  ],
  Array [
    " 2. DynamicType.save(data)                 -> POST   /animals",
  ],
  Array [
    " 3. DynamicType.get(id)                    -> GET    /animals/:id",
  ],
  Array [
    " 4. DynamicType.modify(id, data)           -> PUT    /animals/:id",
  ],
  Array [
    " 5. DynamicType.modify(id, data)           -> PATCH  /animals/:id",
  ],
  Array [
    " 6. DynamicType.delete(id)                 -> DELETE /animals/:id",
  ],
  Array [
    " 7. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    " 8. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    " 9. DynamicType.get(id)                    -> GET    /users/:id",
  ],
  Array [
    "10. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    "11. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    "12. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [
    "13. DynamicType.list                       -> GET    /users/:pid/animals",
  ],
  Array [
    "14. DynamicType.save(pid, data)            -> POST   /users/:pid/animals",
  ],
  Array [
    "15. DynamicType.get(pid, id)               -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "16. DynamicType.modify(pid, id, data)      -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "17. DynamicType.modify(pid, id, data)      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "18. DynamicType.delete(pid, id)            -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`TypeOrm CRUD Route Generator Should generate one to many routes without callback 1`] = `
Array [
  Array [
    "1. Animal -> Animal db.animals",
  ],
  Array [
    "2. User   -> User   db.users",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DynamicType.list(offset, limit, query) -> GET    /animals",
  ],
  Array [
    " 2. DynamicType.save(data)                 -> POST   /animals",
  ],
  Array [
    " 3. DynamicType.get(id)                    -> GET    /animals/:id",
  ],
  Array [
    " 4. DynamicType.modify(id, data)           -> PUT    /animals/:id",
  ],
  Array [
    " 5. DynamicType.modify(id, data)           -> PATCH  /animals/:id",
  ],
  Array [
    " 6. DynamicType.delete(id)                 -> DELETE /animals/:id",
  ],
  Array [
    " 7. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    " 8. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    " 9. DynamicType.get(id)                    -> GET    /users/:id",
  ],
  Array [
    "10. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    "11. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    "12. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [
    "13. DynamicType.list                       -> GET    /users/:pid/animals",
  ],
  Array [
    "14. DynamicType.save(pid, data)            -> POST   /users/:pid/animals",
  ],
  Array [
    "15. DynamicType.get(pid, id)               -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "16. DynamicType.modify(pid, id, data)      -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "17. DynamicType.modify(pid, id, data)      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "18. DynamicType.delete(pid, id)            -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`TypeOrm CRUD Route Generator Should generate routes from inheritance 1`] = `
Array [
  Array [
    "1. User -> User db.users",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    "2. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    "3. DynamicType.get(id)                    -> GET    /users/:id",
  ],
  Array [
    "4. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    "5. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    "6. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`TypeOrm CRUD Route Generator Should generate routes from multiple entities 1`] = `
Array [
  Array [
    "1. User       -> User       db.users",
  ],
  Array [
    "2. SecondUser -> SecondUser db.secondusers",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    " 2. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    " 3. DynamicType.get(id)                    -> GET    /users/:id",
  ],
  Array [
    " 4. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    " 5. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    " 6. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [
    " 7. DynamicType.list(offset, limit, query) -> GET    /secondusers",
  ],
  Array [
    " 8. DynamicType.save(data)                 -> POST   /secondusers",
  ],
  Array [
    " 9. DynamicType.get(id)                    -> GET    /secondusers/:id",
  ],
  Array [
    "10. DynamicType.modify(id, data)           -> PUT    /secondusers/:id",
  ],
  Array [
    "11. DynamicType.modify(id, data)           -> PATCH  /secondusers/:id",
  ],
  Array [
    "12. DynamicType.delete(id)                 -> DELETE /secondusers/:id",
  ],
  Array [],
]
`;

exports[`TypeOrm CRUD Route Generator Should generate routes properly 1`] = `
Array [
  Array [
    "1. User -> User db.users",
  ],
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DynamicType.list(offset, limit, query) -> GET    /users",
  ],
  Array [
    "2. DynamicType.save(data)                 -> POST   /users",
  ],
  Array [
    "3. DynamicType.get(id)                    -> GET    /users/:id",
  ],
  Array [
    "4. DynamicType.modify(id, data)           -> PUT    /users/:id",
  ],
  Array [
    "5. DynamicType.modify(id, data)           -> PATCH  /users/:id",
  ],
  Array [
    "6. DynamicType.delete(id)                 -> DELETE /users/:id",
  ],
  Array [],
]
`;
