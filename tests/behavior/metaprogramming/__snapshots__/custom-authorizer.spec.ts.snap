// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom Authorizer Should able to access actionParams 1`] = `
Array [
  Array [
    ParameterMetadata {
      "meta": Array [
        Object {
          "decorators": Array [],
          "fields": Object {},
          "index": 0,
          "kind": "Parameter",
          "name": "id",
          "type": Number,
          "typeClassification": "Primitive",
        },
      ],
      "parameters": Array [
        1234,
      ],
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on constructor 1`] = `
Array [
  Array [
    Object {
      "ctor": Object {
        "kind": "Constructor",
        "name": "constructor",
        "parameters": Array [],
      },
      "decorators": Array [
        Object {
          "access": "route",
          "evaluation": "Dynamic",
          "location": "Class",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "route",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
      ],
      "kind": "Class",
      "methods": Array [
        Object {
          "decorators": Array [
            Object {
              "map": undefined,
              "method": "get",
              "name": "plumier-meta:route",
              "url": undefined,
              Symbol(tinspector:decoratorOption): Object {
                "allowMultiple": true,
                "applyTo": Array [],
                "inherit": true,
                "removeApplied": true,
              },
            },
          ],
          "kind": "Method",
          "name": "get",
          "parameters": Array [
            Object {
              "decorators": Array [],
              "fields": Object {},
              "index": 0,
              "kind": "Parameter",
              "name": "id",
              "type": Number,
              "typeClassification": "Primitive",
            },
          ],
          "returnType": undefined,
          "typeClassification": undefined,
        },
      ],
      "name": "AnimalController",
      "properties": Array [],
      "super": Object,
      "type": AnimalController,
      "typeClassification": "Class",
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on method 1`] = `
Array [
  Array [
    Object {
      "decorators": Array [
        Object {
          "access": "route",
          "evaluation": "Dynamic",
          "location": "Method",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "route",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
        Object {
          "map": undefined,
          "method": "get",
          "name": "plumier-meta:route",
          "url": undefined,
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "get",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": Object {},
          "index": 0,
          "kind": "Parameter",
          "name": "id",
          "type": Number,
          "typeClassification": "Primitive",
        },
      ],
      "parent": AnimalController,
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on parameter 1`] = `
Array [
  Array [
    Object {
      "decorators": Array [
        Object {
          "access": "write",
          "evaluation": "Dynamic",
          "location": "Parameter",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "write",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
      ],
      "fields": Object {},
      "index": 0,
      "kind": "Parameter",
      "name": "id",
      "parent": AnimalController,
      "type": Number,
      "typeClassification": "Primitive",
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on parameter property 1`] = `
Array [
  Array [
    Object {
      "decorators": Array [
        Object {
          "access": "write",
          "evaluation": "Dynamic",
          "location": "Parameter",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "write",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
      ],
      "get": undefined,
      "index": 0,
      "isParameter": true,
      "kind": "Property",
      "name": "name",
      "parent": Animal,
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on projection authorizer 1`] = `
Array [
  Array [
    Object {
      "decorators": Array [
        Object {
          "access": "read",
          "evaluation": "Dynamic",
          "location": "Parameter",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "read",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
      ],
      "get": undefined,
      "index": 0,
      "isParameter": true,
      "kind": "Property",
      "name": "name",
      "parent": Animal,
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access current metadata on projection authorizer with property 1`] = `
Array [
  Array [
    Object {
      "decorators": Array [
        Object {
          "access": "read",
          "evaluation": "Dynamic",
          "location": "Method",
          "policies": Array [
            "custom",
          ],
          "tag": "custom",
          "type": "plumier-meta:authorize",
          Symbol(tinspector:decoratorOption): Object {
            "access": "read",
            "allowMultiple": true,
            "applyTo": Array [],
            "evaluation": "Dynamic",
            "inherit": true,
            "methods": Array [],
            "removeApplied": true,
            "tag": "custom",
          },
        },
      ],
      "get": undefined,
      "kind": "Property",
      "name": "name",
      "parent": Animal,
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
]
`;

exports[`Custom Authorizer Should able to access metadata from custom authorizer 1`] = `
Array [
  Array [
    MetadataImpl {
      "access": "custom",
      "action": Object {
        "decorators": Array [
          Object {
            "access": "route",
            "evaluation": "Dynamic",
            "location": "Method",
            "policies": Array [
              "custom",
            ],
            "tag": "custom",
            "type": "plumier-meta:authorize",
            Symbol(tinspector:decoratorOption): Object {
              "access": "route",
              "allowMultiple": true,
              "applyTo": Array [],
              "evaluation": "Dynamic",
              "inherit": true,
              "methods": Array [],
              "removeApplied": true,
              "tag": "custom",
            },
          },
          Object {
            "map": undefined,
            "method": "get",
            "name": "plumier-meta:route",
            "url": undefined,
            Symbol(tinspector:decoratorOption): Object {
              "allowMultiple": true,
              "applyTo": Array [],
              "inherit": true,
              "removeApplied": true,
            },
          },
        ],
        "kind": "Method",
        "name": "get",
        "parameters": Array [
          Object {
            "decorators": Array [],
            "fields": Object {},
            "index": 0,
            "kind": "Parameter",
            "name": "id",
            "type": Number,
            "typeClassification": "Primitive",
          },
        ],
        "returnType": undefined,
        "typeClassification": undefined,
      },
      "actionParams": ParameterMetadata {
        "meta": Array [
          Object {
            "decorators": Array [],
            "fields": Object {},
            "index": 0,
            "kind": "Parameter",
            "name": "id",
            "type": Number,
            "typeClassification": "Primitive",
          },
        ],
        "parameters": Array [
          1234,
        ],
      },
      "controller": Object {
        "ctor": Object {
          "kind": "Constructor",
          "name": "constructor",
          "parameters": Array [],
        },
        "decorators": Array [],
        "kind": "Class",
        "methods": Array [
          Object {
            "decorators": Array [
              Object {
                "access": "route",
                "evaluation": "Dynamic",
                "location": "Method",
                "policies": Array [
                  "custom",
                ],
                "tag": "custom",
                "type": "plumier-meta:authorize",
                Symbol(tinspector:decoratorOption): Object {
                  "access": "route",
                  "allowMultiple": true,
                  "applyTo": Array [],
                  "evaluation": "Dynamic",
                  "inherit": true,
                  "methods": Array [],
                  "removeApplied": true,
                  "tag": "custom",
                },
              },
              Object {
                "map": undefined,
                "method": "get",
                "name": "plumier-meta:route",
                "url": undefined,
                Symbol(tinspector:decoratorOption): Object {
                  "allowMultiple": true,
                  "applyTo": Array [],
                  "inherit": true,
                  "removeApplied": true,
                },
              },
            ],
            "kind": "Method",
            "name": "get",
            "parameters": Array [
              Object {
                "decorators": Array [],
                "fields": Object {},
                "index": 0,
                "kind": "Parameter",
                "name": "id",
                "type": Number,
                "typeClassification": "Primitive",
              },
            ],
            "returnType": undefined,
            "typeClassification": undefined,
          },
        ],
        "name": "AnimalController",
        "properties": Array [],
        "super": Object,
        "type": AnimalController,
        "typeClassification": "Class",
      },
      "current": Object {
        "decorators": Array [
          Object {
            "access": "route",
            "evaluation": "Dynamic",
            "location": "Method",
            "policies": Array [
              "custom",
            ],
            "tag": "custom",
            "type": "plumier-meta:authorize",
            Symbol(tinspector:decoratorOption): Object {
              "access": "route",
              "allowMultiple": true,
              "applyTo": Array [],
              "evaluation": "Dynamic",
              "inherit": true,
              "methods": Array [],
              "removeApplied": true,
              "tag": "custom",
            },
          },
          Object {
            "map": undefined,
            "method": "get",
            "name": "plumier-meta:route",
            "url": undefined,
            Symbol(tinspector:decoratorOption): Object {
              "allowMultiple": true,
              "applyTo": Array [],
              "inherit": true,
              "removeApplied": true,
            },
          },
        ],
        "kind": "Method",
        "name": "get",
        "parameters": Array [
          Object {
            "decorators": Array [],
            "fields": Object {},
            "index": 0,
            "kind": "Parameter",
            "name": "id",
            "type": Number,
            "typeClassification": "Primitive",
          },
        ],
        "parent": AnimalController,
        "returnType": undefined,
        "typeClassification": undefined,
      },
    },
  ],
]
`;
