// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ellipsis Should not trim string if shorter than expected 1`] = `"Lorem"`;

exports[`Ellipsis Should trim long string 1`] = `"Lorem ipsum... dolor"`;

exports[`Entity Relation Info Should extract many to one entity relation info properly 1`] = `
Object {
  "child": Animal,
  "childProperty": "user",
  "parent": User,
  "parentProperty": "animals",
  "type": "ManyToOne",
}
`;

exports[`Entity Relation Info Should extract many to one entity relation without parent inverse property 1`] = `
Object {
  "child": Animal,
  "childProperty": "user",
  "parent": User,
  "parentProperty": undefined,
  "type": "ManyToOne",
}
`;

exports[`Entity Relation Info Should extract one to many entity relation info properly 1`] = `
Object {
  "child": Animal,
  "childProperty": "user",
  "parent": User,
  "parentProperty": "animals",
  "type": "OneToMany",
}
`;

exports[`Entity Relation Info Should throw error when provided invalid property name 1`] = `"Animal doesn't have property named users"`;

exports[`Entity Relation Info Should throw error when provided non relation one to many property 1`] = `"User.animals is not a valid relation, make sure its decorated with @entity.relation() decorator"`;

exports[`Model Analyser Should analyze missing array type 1`] = `
Array [
  Object {
    "issue": "ArrayTypeMissing",
    "location": "MyModel.dates",
  },
]
`;

exports[`Model Analyser Should analyze missing properties 1`] = `
Array [
  Object {
    "issue": "NoProperties",
    "location": "MyModel",
  },
]
`;

exports[`Model Analyser Should analyze missing property in array type 1`] = `
Array [
  Object {
    "issue": "TypeMissing",
    "location": "MyModel.date",
  },
]
`;

exports[`Model Analyser Should analyze missing property type 1`] = `
Array [
  Object {
    "issue": "TypeMissing",
    "location": "MyModel.date",
  },
]
`;

exports[`Model Analyser Should analyze missing property type in nested array model 1`] = `
Array [
  Object {
    "issue": "TypeMissing",
    "location": "ParentModel.date",
  },
]
`;

exports[`Model Analyser Should analyze missing property type in nested model 1`] = `
Array [
  Object {
    "issue": "TypeMissing",
    "location": "ParentModel.date",
  },
]
`;

exports[`Model Analyser Should skip cross reference type 1`] = `
Array [
  Object {
    "issue": "TypeMissing",
    "location": "ParentModel.date",
  },
]
`;

exports[`PrintTable Should able to print table 1`] = `
Array [
  Array [
    "1. John Subaru 60",
  ],
  Array [
    "2. John Subaru 60",
  ],
  Array [
    "3. John Subaru 60",
  ],
]
`;

exports[`PrintTable Should able to print table with algin right 1`] = `
Array [
  Array [
    "1. John Subaru  60",
  ],
  Array [
    "2. John Subaru 160",
  ],
  Array [
    "3. John Subaru  60",
  ],
]
`;

exports[`PrintTable Should not error when provided undefined value 1`] = `
Array [
  Array [
    "1. John Subaru 60",
  ],
  Array [
    "2. John Subaru   ",
  ],
  Array [
    "3. John Subaru 60",
  ],
]
`;
