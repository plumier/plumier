// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Open Api Generic Controller Should generate DELETE /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animals/:id properly 3`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animals/:id properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals properly 1`] = `
Array [
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals properly 3`] = `
Array [
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/:id properly 3`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/:id properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/{pid}/tags properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "tag",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/{pid}/tags properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/:id properly 3`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/:id properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate POST /animals properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic Controller Should generate POST /animals properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate POST /animals properly 3`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic Controller Should generate POST /animals properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate POST /animals/{pid}/tags properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Tag",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Tag",
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic Controller Should generate POST /animals/{pid}/tags properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/:id properly 3`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/:id properly 4`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PUT /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should provide proper component 1`] = `
Object {
  "properties": Object {
    "name": Object {
      "type": "string",
    },
    "tags": Object {
      "items": Object {
        "$ref": "#/components/schemas/Tag",
      },
      "type": "array",
    },
  },
  "type": "object",
}
`;

exports[`Open Api Generic Controller Should provide proper component 2`] = `
Object {
  "properties": Object {
    "tag": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Open Api Generic Controller Should provided proper component 1`] = `
Object {
  "properties": Object {
    "name": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Route Generator Generic Controller Should able to change root path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to ignore an entity from route generation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /animals",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /animals",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /animals/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /animals/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /animals/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to ignore some method of controller from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "3. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to specify ID type by providing decorator 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
]
`;

exports[`Route Generator Generic Controller Should able to specify custom controller from Web Api Facility 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    "2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    "3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    "4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    "5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    "6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to specify directory of custom controller in nested directory, but should not affect route 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. NestedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    "2. NestedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    "3. NestedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    "4. NestedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    "5. NestedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    "6. NestedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to specify directory of custom controller with absolute path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    "2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    "3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    "4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    "5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    "6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to specify directory of custom controller with relative path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    "2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    "3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    "4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    "5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    "6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to use custom controller 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyCustomControllerGeneric.list       -> GET    /api/v1/users",
  ],
  Array [
    "2. MyCustomControllerGeneric.save(data) -> POST   /api/v1/users",
  ],
  Array [
    "3. MyCustomControllerGeneric.get(id)    -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyCustomControllerGeneric.modify     -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyCustomControllerGeneric.replace    -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyCustomControllerGeneric.delete(id) -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to use root path without leading slash 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to use root path without trailing slash 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should generate routes with parameter property entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should generate routes with property field entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should only allow custom controller ends with Generic 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should only allow custom controller extends from ControllerGeneric 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should prioritize controller provided by CRUD facility instead of WebApiFacility 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyCustomControllerGeneric.list       -> GET    /users",
  ],
  Array [
    "2. MyCustomControllerGeneric.save(data) -> POST   /users",
  ],
  Array [
    "3. MyCustomControllerGeneric.get(id)    -> GET    /users/:id",
  ],
  Array [
    "4. MyCustomControllerGeneric.modify     -> PATCH  /users/:id",
  ],
  Array [
    "5. MyCustomControllerGeneric.replace    -> PUT    /users/:id",
  ],
  Array [
    "6. MyCustomControllerGeneric.delete(id) -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should use string as default id if no ID type specified 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
]
`;

exports[`Route Generator Grouping Should able to group routes 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /animals",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /animals",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /animals/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /animals/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /animals/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /animals/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to change root path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore an entity from route generation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 2. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 3. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    " 4. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    " 5. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    " 6. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [
    " 7. MyControllerGeneric.list              -> GET    /animals",
  ],
  Array [
    " 8. MyControllerGeneric.save(data)        -> POST   /animals",
  ],
  Array [
    " 9. MyControllerGeneric.get(id)           -> GET    /animals/:id",
  ],
  Array [
    "10. MyControllerGeneric.modify(id, data)  -> PATCH  /animals/:id",
  ],
  Array [
    "11. MyControllerGeneric.replace(id, data) -> PUT    /animals/:id",
  ],
  Array [
    "12. MyControllerGeneric.delete(id)        -> DELETE /animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore relation on property field 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    "2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    "3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore some method of controller from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 2. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 3. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 5. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 6. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore some method on relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore some method on relation on property field 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to specify ID type by providing decorator 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
]
`;

exports[`Route Generator One To Many Controller Should able to specify directory of custom controller in nested directory, but should not affect route 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. NestedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    " 2. NestedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    " 3. NestedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    " 4. NestedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    " 5. NestedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    " 6. NestedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [
    " 7. NestedOneToManyC...eneric.list           -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. NestedOneToManyC...eneric.save           -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. NestedOneToManyC...eneric.get            -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. NestedOneToManyC...eneric.modify         -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. NestedOneToManyC...eneric.replace        -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. NestedOneToManyC...eneric.delete         -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to specify directory of custom controller with absolute path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    " 2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    " 3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    " 4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    " 5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    " 6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [
    " 7. HostedOneToManyC...eneric.list           -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. HostedOneToManyC...eneric.save           -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. HostedOneToManyC...eneric.get            -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. HostedOneToManyC...eneric.modify         -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. HostedOneToManyC...eneric.replace        -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. HostedOneToManyC...eneric.delete         -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to specify directory of custom controller with relative path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    " 2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    " 3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    " 4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    " 5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    " 6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [
    " 7. HostedOneToManyC...eneric.list           -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. HostedOneToManyC...eneric.save           -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. HostedOneToManyC...eneric.get            -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. HostedOneToManyC...eneric.modify         -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. HostedOneToManyC...eneric.replace        -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. HostedOneToManyC...eneric.delete         -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to use custom controller 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyCustomOneToMan...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyCustomOneToMan...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyCustomOneToMan...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyCustomOneToMan...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyCustomOneToMan...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyCustomOneToMan...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to use custom controller from WebApiFacility 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. HostedControllerGeneric.list             -> GET    /users",
  ],
  Array [
    " 2. HostedControllerGeneric.save(data)       -> POST   /users",
  ],
  Array [
    " 3. HostedControllerGeneric.get(id)          -> GET    /users/:id",
  ],
  Array [
    " 4. HostedControllerGeneric.modify(id, data) -> PATCH  /users/:id",
  ],
  Array [
    " 5. HostedControllerGeneric.replace          -> PUT    /users/:id",
  ],
  Array [
    " 6. HostedControllerGeneric.delete(id)       -> DELETE /users/:id",
  ],
  Array [
    " 7. HostedOneToManyC...eneric.list           -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. HostedOneToManyC...eneric.save           -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. HostedOneToManyC...eneric.get            -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. HostedOneToManyC...eneric.modify         -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. HostedOneToManyC...eneric.replace        -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. HostedOneToManyC...eneric.delete         -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to use root path without leading slash 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to use root path without trailing slash 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should generate routes with parameter property entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should generate routes with property field entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should only allow custom controller ends with Generic 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should only allow custom controller extends from ControllerGeneric 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /api/v1/users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /api/v1/users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /api/v1/users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /api/v1/users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /api/v1/users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /api/v1/users/:id",
  ],
  Array [
    " 7. MyOneToManyContr...eneric.list        -> GET    /api/v1/users/:pid/animals",
  ],
  Array [
    " 8. MyOneToManyContr...eneric.save        -> POST   /api/v1/users/:pid/animals",
  ],
  Array [
    " 9. MyOneToManyContr...eneric.get         -> GET    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "10. MyOneToManyContr...eneric.modify      -> PATCH  /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "11. MyOneToManyContr...eneric.replace     -> PUT    /api/v1/users/:pid/animals/:id",
  ],
  Array [
    "12. MyOneToManyContr...eneric.delete      -> DELETE /api/v1/users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should prioritize controller provided by CRUD facility instead of WebApiFacility 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    " 7. MyCustomOneToMan...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    " 8. MyCustomOneToMan...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    " 9. MyCustomOneToMan...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "10. MyCustomOneToMan...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "11. MyCustomOneToMan...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "12. MyCustomOneToMan...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should use string as default id if no ID type specified 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
]
`;

exports[`Route Generator Should able to specify entity directory 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /animals",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /animals",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /animals/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /animals/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /animals/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /animals/:id",
  ],
  Array [
    " 7. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 8. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 9. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "10. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "11. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "12. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    "13. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    "14. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    "15. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "16. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "17. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "18. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Should able to specify entity directory with relative path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. MyControllerGeneric.list              -> GET    /animals",
  ],
  Array [
    " 2. MyControllerGeneric.save(data)        -> POST   /animals",
  ],
  Array [
    " 3. MyControllerGeneric.get(id)           -> GET    /animals/:id",
  ],
  Array [
    " 4. MyControllerGeneric.modify(id, data)  -> PATCH  /animals/:id",
  ],
  Array [
    " 5. MyControllerGeneric.replace(id, data) -> PUT    /animals/:id",
  ],
  Array [
    " 6. MyControllerGeneric.delete(id)        -> DELETE /animals/:id",
  ],
  Array [
    " 7. MyControllerGeneric.list              -> GET    /users",
  ],
  Array [
    " 8. MyControllerGeneric.save(data)        -> POST   /users",
  ],
  Array [
    " 9. MyControllerGeneric.get(id)           -> GET    /users/:id",
  ],
  Array [
    "10. MyControllerGeneric.modify(id, data)  -> PATCH  /users/:id",
  ],
  Array [
    "11. MyControllerGeneric.replace(id, data) -> PUT    /users/:id",
  ],
  Array [
    "12. MyControllerGeneric.delete(id)        -> DELETE /users/:id",
  ],
  Array [
    "13. MyOneToManyContr...eneric.list        -> GET    /users/:pid/animals",
  ],
  Array [
    "14. MyOneToManyContr...eneric.save        -> POST   /users/:pid/animals",
  ],
  Array [
    "15. MyOneToManyContr...eneric.get         -> GET    /users/:pid/animals/:id",
  ],
  Array [
    "16. MyOneToManyContr...eneric.modify      -> PATCH  /users/:pid/animals/:id",
  ],
  Array [
    "17. MyOneToManyContr...eneric.replace     -> PUT    /users/:pid/animals/:id",
  ],
  Array [
    "18. MyOneToManyContr...eneric.delete      -> DELETE /users/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Should initiate IdentifierResult properly 1`] = `
IdentifierResult {
  "id": 20,
}
`;
