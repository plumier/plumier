// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generic Controller Should able to use Number id 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
    "type": Array [
      User,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": User,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic Controller Should able to use Number id 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
]
`;

exports[`Generic Controller Should able to use String id 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
    "type": Array [
      User,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
    "type": User,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic Controller Should able to use String id 2`] = `
Array [
  Object {
    "name": "id",
    "type": String,
  },
]
`;

exports[`Generic One To Many Controller Should able to use Number id 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "findParentByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
    "type": Array [
      Animal,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": Animal,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic One To Many Controller Should able to use Number id 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
]
`;

exports[`Generic One To Many Controller Should able to use Number pid 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "findParentByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
    "type": Array [
      Animal,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": Animal,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic One To Many Controller Should able to use Number pid 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
]
`;

exports[`Generic One To Many Controller Should able to use String id 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "findParentByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
    "type": Array [
      Animal,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
    "type": Animal,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic One To Many Controller Should able to use String id 2`] = `
Array [
  Object {
    "name": "id",
    "type": String,
  },
]
`;

exports[`Generic One To Many Controller Should able to use String pid 1`] = `
Array [
  Object {
    "name": "findByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "findParentByIdOrNotFound",
    "pars": Array [
      Object {
        "name": "id",
        "type": Object,
      },
    ],
    "type": Promise,
  },
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
    "type": Array [
      Animal,
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": Animal,
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
    "type": DynamicType,
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
    "type": DynamicType,
  },
]
`;

exports[`Generic One To Many Controller Should able to use String pid 2`] = `
Array [
  Object {
    "name": "id",
    "type": Number,
  },
]
`;

exports[`Generic One To Many Controller Should throw error when no OneToManyDecorator provided 1`] = `"Configuration Error: UsersController doesn't decorated with OneToManyDecorator @decorateClass(<OneToManyDecorator>)"`;

exports[`Rote Generator Should able to ignore entity from routes generation 1`] = `
Array [
  Object {
    "method": "get",
    "path": "/user",
  },
  Object {
    "method": "post",
    "path": "/user",
  },
  Object {
    "method": "get",
    "path": "/user/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:id",
  },
  Object {
    "method": "put",
    "path": "/user/:id",
  },
  Object {
    "method": "delete",
    "path": "/user/:id",
  },
]
`;

exports[`Rote Generator Should able to ignore one to many route generation 1`] = `
Array [
  Object {
    "method": "get",
    "path": "/animal",
  },
  Object {
    "method": "post",
    "path": "/animal",
  },
  Object {
    "method": "get",
    "path": "/animal/:id",
  },
  Object {
    "method": "patch",
    "path": "/animal/:id",
  },
  Object {
    "method": "put",
    "path": "/animal/:id",
  },
  Object {
    "method": "delete",
    "path": "/animal/:id",
  },
  Object {
    "method": "get",
    "path": "/user",
  },
  Object {
    "method": "post",
    "path": "/user",
  },
  Object {
    "method": "get",
    "path": "/user/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:id",
  },
  Object {
    "method": "put",
    "path": "/user/:id",
  },
  Object {
    "method": "delete",
    "path": "/user/:id",
  },
]
`;

exports[`Rote Generator Should able to ignore some method on one to many route generation 1`] = `
Array [
  Object {
    "method": "get",
    "path": "/animal",
  },
  Object {
    "method": "post",
    "path": "/animal",
  },
  Object {
    "method": "get",
    "path": "/animal/:id",
  },
  Object {
    "method": "patch",
    "path": "/animal/:id",
  },
  Object {
    "method": "put",
    "path": "/animal/:id",
  },
  Object {
    "method": "delete",
    "path": "/animal/:id",
  },
  Object {
    "method": "get",
    "path": "/user",
  },
  Object {
    "method": "post",
    "path": "/user",
  },
  Object {
    "method": "get",
    "path": "/user/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:id",
  },
  Object {
    "method": "put",
    "path": "/user/:id",
  },
  Object {
    "method": "delete",
    "path": "/user/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:pid/animals/:id",
  },
]
`;

exports[`Rote Generator Should able to ignore some methods of generated routes 1`] = `
Array [
  Object {
    "method": "patch",
    "path": "/animal/:id",
  },
]
`;

exports[`Rote Generator Should generate routes properly 1`] = `
Array [
  Object {
    "method": "get",
    "path": "/animal",
  },
  Object {
    "method": "post",
    "path": "/animal",
  },
  Object {
    "method": "get",
    "path": "/animal/:id",
  },
  Object {
    "method": "patch",
    "path": "/animal/:id",
  },
  Object {
    "method": "put",
    "path": "/animal/:id",
  },
  Object {
    "method": "delete",
    "path": "/animal/:id",
  },
  Object {
    "method": "get",
    "path": "/user",
  },
  Object {
    "method": "post",
    "path": "/user",
  },
  Object {
    "method": "get",
    "path": "/user/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:id",
  },
  Object {
    "method": "put",
    "path": "/user/:id",
  },
  Object {
    "method": "delete",
    "path": "/user/:id",
  },
  Object {
    "method": "get",
    "path": "/user/:pid/animals",
  },
  Object {
    "method": "post",
    "path": "/user/:pid/animals",
  },
  Object {
    "method": "get",
    "path": "/user/:pid/animals/:id",
  },
  Object {
    "method": "patch",
    "path": "/user/:pid/animals/:id",
  },
  Object {
    "method": "put",
    "path": "/user/:pid/animals/:id",
  },
  Object {
    "method": "delete",
    "path": "/user/:pid/animals/:id",
  },
]
`;

exports[`Swagger Generic Controller Should generate DELETE /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger Generic Controller Should generate DELETE /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger Generic Controller Should generate GET /animal properly 1`] = `
Array [
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "number",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "number",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger Generic Controller Should generate GET /animal properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger Generic Controller Should generate GET /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger Generic Controller Should generate GET /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger Generic Controller Should generate PATCH /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger Generic Controller Should generate PATCH /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger Generic Controller Should generate POST /animal properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
  },
  "required": true,
}
`;

exports[`Swagger Generic Controller Should generate POST /animal properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger Generic Controller Should generate PUT /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger Generic Controller Should generate PUT /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Swagger One To Many Generic Controller Should generate DELETE /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger One To Many Generic Controller Should generate DELETE /animal/:id properly 2`] = `
Array [
  "Client",
]
`;

exports[`Swagger One To Many Generic Controller Should generate GET /animal properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "number",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "readOnly": undefined,
      "type": "number",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger One To Many Generic Controller Should generate GET /animal properly 2`] = `
Array [
  "Client",
]
`;

exports[`Swagger One To Many Generic Controller Should generate GET /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger One To Many Generic Controller Should generate GET /animal/:id properly 2`] = `
Array [
  "Client",
]
`;

exports[`Swagger One To Many Generic Controller Should generate PATCH /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger One To Many Generic Controller Should generate PATCH /animal/:id properly 2`] = `
Array [
  "Client",
]
`;

exports[`Swagger One To Many Generic Controller Should generate POST /animal properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
  },
  "required": true,
}
`;

exports[`Swagger One To Many Generic Controller Should generate POST /animal properly 2`] = `
Array [
  "Client",
]
`;

exports[`Swagger One To Many Generic Controller Should generate PUT /animal/:id properly 1`] = `
Array [
  Object {
    "description": undefined,
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
  Object {
    "description": undefined,
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "readOnly": undefined,
      "type": "string",
      "writeOnly": undefined,
    },
  },
]
`;

exports[`Swagger One To Many Generic Controller Should generate PUT /animal/:id properly 2`] = `
Array [
  "Client",
]
`;

exports[`getGenericControllers Should able only change only one generic controller 1`] = `
Object {
  "genericController": Object {
    "root": "api/v1",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "api/v1",
    "type": OneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should able to change root path 1`] = `
Object {
  "genericController": Object {
    "root": "api/v1",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "api/v1",
    "type": MyOneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should able to provide directory path 1`] = `
Object {
  "genericController": Object {
    "root": "",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "",
    "type": MyOneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should able to provide directory path with nested root 1`] = `
Object {
  "genericController": Object {
    "root": "/api/v1",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "/api/v1",
    "type": MyOneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should able to provide path to current file 1`] = `
Object {
  "genericController": Object {
    "root": "",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "",
    "type": MyOneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should able to use default controllers 1`] = `
Object {
  "genericController": Object {
    "root": "root/path",
    "type": ControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "root/path",
    "type": OneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should get controller properly when provided classes directly 1`] = `
Object {
  "genericController": Object {
    "root": "",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "",
    "type": MyOneToManyControllerGeneric,
  },
}
`;

exports[`getGenericControllers Should prioritize rootPath on configuration vs nested root 1`] = `
Object {
  "genericController": Object {
    "root": "root/path",
    "type": MyControllerGeneric,
  },
  "genericOneToManyController": Object {
    "root": "root/path",
    "type": MyOneToManyControllerGeneric,
  },
}
`;
