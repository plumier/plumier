// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Open Api Generic Controller Should generate DELETE /animal/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate DELETE /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animal properly 1`] = `
Array [
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animal properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate GET /animal/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate GET /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animal/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PATCH /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate POST /animal properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Animal",
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic Controller Should generate POST /animal properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should generate PUT /animal/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic Controller Should generate PUT /animal/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic Controller Should provided proper component 1`] = `
Object {
  "properties": Object {
    "name": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Open Api Generic One To Many Controller Should generate DELETE /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate DELETE /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate DELETE /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate DELETE /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals properly 1`] = `
Array [
  Object {
    "in": "query",
    "name": "name",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/{pid}/tags properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "tag",
    "required": false,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "query",
    "name": "offset",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
  Object {
    "in": "query",
    "name": "limit",
    "required": false,
    "schema": Object {
      "type": "number",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/{pid}/tags properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate GET /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate PATCH /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate PATCH /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate PATCH /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate PATCH /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate POST /animals properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "allOf": Array [
          Object {
            "$ref": "#/components/schemas/Animal",
          },
          Object {
            "properties": Object {
              "tags": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "type": "object",
          },
        ],
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "allOf": Array [
          Object {
            "$ref": "#/components/schemas/Animal",
          },
          Object {
            "properties": Object {
              "tags": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic One To Many Controller Should generate POST /animals properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate POST /animals/{pid}/tags properly 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Tag",
      },
    },
    "application/x-www-form-urlencoded": Object {
      "schema": Object {
        "$ref": "#/components/schemas/Tag",
      },
    },
  },
  "required": true,
}
`;

exports[`Open Api Generic One To Many Controller Should generate POST /animals/{pid}/tags properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate PUT /animals/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate PUT /animals/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should generate PUT /animals/{pid}/tags/:id properly 1`] = `
Array [
  Object {
    "in": "path",
    "name": "pid",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
  Object {
    "in": "path",
    "name": "id",
    "required": true,
    "schema": Object {
      "type": "string",
    },
  },
]
`;

exports[`Open Api Generic One To Many Controller Should generate PUT /animals/{pid}/tags/:id properly 2`] = `
Array [
  "Animal",
]
`;

exports[`Open Api Generic One To Many Controller Should provide proper component 1`] = `
Object {
  "properties": Object {
    "name": Object {
      "type": "string",
    },
    "tags": Object {
      "items": Object {
        "$ref": "#/components/schemas/Tag",
      },
      "type": "array",
    },
  },
  "type": "object",
}
`;

exports[`Open Api Generic One To Many Controller Should provide proper component 2`] = `
Object {
  "properties": Object {
    "tag": Object {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Route Generator Generic Controller Should able to change root path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /api/v1/user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> POST   /api/v1/user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> GET    /api/v1/user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> PATCH  /api/v1/user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> PUT    /api/v1/user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> DELETE /api/v1/user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to ignore some method of controller from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    "3. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set @authorize.get() from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> admin         GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> Authenticated POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> admin         GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> Authenticated PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> Authenticated PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> Authenticated DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set @authorize.set() from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> Authenticated GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> admin         POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> Authenticated GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> admin         PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> admin         PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> admin         DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set authorization for specific method from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> Authenticated GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> admin         POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> Authenticated GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> admin         PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> admin         PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> admin         DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set authorization from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> admin GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> admin POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> admin GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> admin PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> admin PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> admin DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set custom authorizer from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> Custom GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> Custom POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> Custom GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> Custom PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> Custom PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> Custom DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to set public authorizer from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> Public GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> Public POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> Public GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> Public PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> Public PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> Public DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should able to specify ID of type string by providing decorator 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
]
`;

exports[`Route Generator Generic Controller Should able to specify ID type by providing decorator 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
]
`;

exports[`Route Generator Generic Controller Should able to use custom controller 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyCustomControllerGeneric.list       -> GET    /api/v1/user",
  ],
  Array [
    "2. MyCustomControllerGeneric.save(data) -> POST   /api/v1/user",
  ],
  Array [
    "3. MyCustomControllerGeneric.get(id)    -> GET    /api/v1/user/:id",
  ],
  Array [
    "4. MyCustomControllerGeneric.modify     -> PATCH  /api/v1/user/:id",
  ],
  Array [
    "5. MyCustomControllerGeneric.replace    -> PUT    /api/v1/user/:id",
  ],
  Array [
    "6. MyCustomControllerGeneric.delete(id) -> DELETE /api/v1/user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should generate routes with parameter property entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should generate routes with property field entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Generic Controller Should not generate entity that is not marked as controller 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "No controller found",
  ],
]
`;

exports[`Route Generator Generic Controller Should throw error properly 1`] = `Array []`;

exports[`Route Generator Generic Controller Should use string as default id if no ID type specified 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": User,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": User,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
]
`;

exports[`Route Generator Grouping Should able to group one to many routes 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> GET    /api/v2/user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> POST   /api/v2/user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> GET    /api/v2/user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> PATCH  /api/v2/user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> PUT    /api/v2/user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> DELETE /api/v2/user/:pid/animals/:id",
  ],
  Array [],
  Array [
    "1. DefaultOneToMany...eneric.list    -> GET    /api/v1/user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> POST   /api/v1/user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> GET    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> PATCH  /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> PUT    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> DELETE /api/v1/user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Grouping Should able to group routes 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /api/v2/user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> POST   /api/v2/user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> GET    /api/v2/user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> PATCH  /api/v2/user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> PUT    /api/v2/user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> DELETE /api/v2/user/:id",
  ],
  Array [],
  Array [
    "1. DefaultControllerGeneric.list       -> GET    /api/v1/user",
  ],
  Array [
    "2. DefaultControllerGeneric.save(data) -> POST   /api/v1/user",
  ],
  Array [
    "3. DefaultControllerGeneric.get(id)    -> GET    /api/v1/user/:id",
  ],
  Array [
    "4. DefaultControllerGeneric.modify     -> PATCH  /api/v1/user/:id",
  ],
  Array [
    "5. DefaultControllerGeneric.replace    -> PUT    /api/v1/user/:id",
  ],
  Array [
    "6. DefaultControllerGeneric.delete(id) -> DELETE /api/v1/user/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to authorize relation on relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> admin GET    /user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> admin POST   /user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> admin GET    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> admin PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> admin PUT    /user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> admin DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to authorize some method on relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> Authenticated GET    /user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> admin         POST   /user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> Authenticated GET    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> admin         PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> admin         PUT    /user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> admin         DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to change root path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /api/v1/user",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /api/v1/user",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /api/v1/user/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /api/v1/user/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /api/v1/user/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /api/v1/user/:id",
  ],
  Array [
    " 7. DefaultOneToMany...eneric.list      -> GET    /api/v1/user/:pid/animals",
  ],
  Array [
    " 8. DefaultOneToMany...eneric.save      -> POST   /api/v1/user/:pid/animals",
  ],
  Array [
    " 9. DefaultOneToMany...eneric.get       -> GET    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "10. DefaultOneToMany...eneric.modify    -> PATCH  /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "11. DefaultOneToMany...eneric.replace   -> PUT    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "12. DefaultOneToMany...eneric.delete    -> DELETE /api/v1/user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to ignore some method of controller from entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.get     -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "2. DefaultOneToMany...eneric.modify  -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "3. DefaultOneToMany...eneric.replace -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.delete  -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to set @authorize.get() on relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> admin         GET    /user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> Authenticated POST   /user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> admin         GET    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> Authenticated PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> Authenticated PUT    /user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> Authenticated DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to set @authorize.set() on relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> Authenticated GET    /user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> admin         POST   /user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> Authenticated GET    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> admin         PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> admin         PUT    /user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> admin         DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to specify ID type by providing decorator 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": Number,
      },
      Object {
        "name": "id",
        "type": Number,
      },
    ],
  },
]
`;

exports[`Route Generator One To Many Controller Should able to specify relation 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. DefaultOneToMany...eneric.list    -> GET    /user/:pid/animals",
  ],
  Array [
    "2. DefaultOneToMany...eneric.save    -> POST   /user/:pid/animals",
  ],
  Array [
    "3. DefaultOneToMany...eneric.get     -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "4. DefaultOneToMany...eneric.modify  -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "5. DefaultOneToMany...eneric.replace -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "6. DefaultOneToMany...eneric.delete  -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should able to use custom controller 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    "1. MyCustomOneToMan...eneric.list    -> GET    /api/v1/user/:pid/animals",
  ],
  Array [
    "2. MyCustomOneToMan...eneric.save    -> POST   /api/v1/user/:pid/animals",
  ],
  Array [
    "3. MyCustomOneToMan...eneric.get     -> GET    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "4. MyCustomOneToMan...eneric.modify  -> PATCH  /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "5. MyCustomOneToMan...eneric.replace -> PUT    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "6. MyCustomOneToMan...eneric.delete  -> DELETE /api/v1/user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should generate routes with parameter property entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [
    " 7. DefaultOneToMany...eneric.list      -> GET    /user/:pid/animals",
  ],
  Array [
    " 8. DefaultOneToMany...eneric.save      -> POST   /user/:pid/animals",
  ],
  Array [
    " 9. DefaultOneToMany...eneric.get       -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "10. DefaultOneToMany...eneric.modify    -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "11. DefaultOneToMany...eneric.replace   -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "12. DefaultOneToMany...eneric.delete    -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should generate routes with property field entity 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [
    " 7. DefaultOneToMany...eneric.list      -> GET    /user/:pid/animals",
  ],
  Array [
    " 8. DefaultOneToMany...eneric.save      -> POST   /user/:pid/animals",
  ],
  Array [
    " 9. DefaultOneToMany...eneric.get       -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "10. DefaultOneToMany...eneric.modify    -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "11. DefaultOneToMany...eneric.replace   -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "12. DefaultOneToMany...eneric.delete    -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator One To Many Controller Should throw error properly 1`] = `Array []`;

exports[`Route Generator One To Many Controller Should use string as default id if no ID type specified 1`] = `
Array [
  Object {
    "name": "list",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "offset",
        "type": Number,
      },
      Object {
        "name": "limit",
        "type": Number,
      },
      Object {
        "name": "query",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "save",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "get",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
  Object {
    "name": "modify",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "replace",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
      Object {
        "name": "data",
        "type": Animal,
      },
    ],
  },
  Object {
    "name": "delete",
    "pars": Array [
      Object {
        "name": "pid",
        "type": String,
      },
      Object {
        "name": "id",
        "type": String,
      },
    ],
  },
]
`;

exports[`Route Generator Should able to specify entity directory 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /animal",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /animal",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /animal/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /animal/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /animal/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /animal/:id",
  ],
  Array [
    " 7. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    " 8. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    " 9. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    "10. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    "11. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    "12. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [
    "13. DefaultOneToMany...eneric.list      -> GET    /user/:pid/animals",
  ],
  Array [
    "14. DefaultOneToMany...eneric.save      -> POST   /user/:pid/animals",
  ],
  Array [
    "15. DefaultOneToMany...eneric.get       -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "16. DefaultOneToMany...eneric.modify    -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "17. DefaultOneToMany...eneric.replace   -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "18. DefaultOneToMany...eneric.delete    -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Should able to specify entity directory with relative path 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /animal",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /animal",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /animal/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /animal/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /animal/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /animal/:id",
  ],
  Array [
    " 7. DefaultControllerGeneric.list       -> GET    /user",
  ],
  Array [
    " 8. DefaultControllerGeneric.save(data) -> POST   /user",
  ],
  Array [
    " 9. DefaultControllerGeneric.get(id)    -> GET    /user/:id",
  ],
  Array [
    "10. DefaultControllerGeneric.modify     -> PATCH  /user/:id",
  ],
  Array [
    "11. DefaultControllerGeneric.replace    -> PUT    /user/:id",
  ],
  Array [
    "12. DefaultControllerGeneric.delete(id) -> DELETE /user/:id",
  ],
  Array [
    "13. DefaultOneToMany...eneric.list      -> GET    /user/:pid/animals",
  ],
  Array [
    "14. DefaultOneToMany...eneric.save      -> POST   /user/:pid/animals",
  ],
  Array [
    "15. DefaultOneToMany...eneric.get       -> GET    /user/:pid/animals/:id",
  ],
  Array [
    "16. DefaultOneToMany...eneric.modify    -> PATCH  /user/:pid/animals/:id",
  ],
  Array [
    "17. DefaultOneToMany...eneric.replace   -> PUT    /user/:pid/animals/:id",
  ],
  Array [
    "18. DefaultOneToMany...eneric.delete    -> DELETE /user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Should able to specify nested directories 1`] = `
Array [
  Array [],
  Array [
    "Route Analysis Report",
  ],
  Array [
    " 1. DefaultControllerGeneric.list       -> GET    /api/v1/animal",
  ],
  Array [
    " 2. DefaultControllerGeneric.save(data) -> POST   /api/v1/animal",
  ],
  Array [
    " 3. DefaultControllerGeneric.get(id)    -> GET    /api/v1/animal/:id",
  ],
  Array [
    " 4. DefaultControllerGeneric.modify     -> PATCH  /api/v1/animal/:id",
  ],
  Array [
    " 5. DefaultControllerGeneric.replace    -> PUT    /api/v1/animal/:id",
  ],
  Array [
    " 6. DefaultControllerGeneric.delete(id) -> DELETE /api/v1/animal/:id",
  ],
  Array [
    " 7. DefaultControllerGeneric.list       -> GET    /api/v1/user",
  ],
  Array [
    " 8. DefaultControllerGeneric.save(data) -> POST   /api/v1/user",
  ],
  Array [
    " 9. DefaultControllerGeneric.get(id)    -> GET    /api/v1/user/:id",
  ],
  Array [
    "10. DefaultControllerGeneric.modify     -> PATCH  /api/v1/user/:id",
  ],
  Array [
    "11. DefaultControllerGeneric.replace    -> PUT    /api/v1/user/:id",
  ],
  Array [
    "12. DefaultControllerGeneric.delete(id) -> DELETE /api/v1/user/:id",
  ],
  Array [
    "13. DefaultOneToMany...eneric.list      -> GET    /api/v1/user/:pid/animals",
  ],
  Array [
    "14. DefaultOneToMany...eneric.save      -> POST   /api/v1/user/:pid/animals",
  ],
  Array [
    "15. DefaultOneToMany...eneric.get       -> GET    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "16. DefaultOneToMany...eneric.modify    -> PATCH  /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "17. DefaultOneToMany...eneric.replace   -> PUT    /api/v1/user/:pid/animals/:id",
  ],
  Array [
    "18. DefaultOneToMany...eneric.delete    -> DELETE /api/v1/user/:pid/animals/:id",
  ],
  Array [],
]
`;

exports[`Route Generator Should initiate IdentifierResult properly 1`] = `
IdentifierResult {
  "id": 20,
}
`;
