// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class Introspection Should able to define return type of method 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          "genericArguments": Array [],
          "kind": "Override",
          "target": DummyClass,
          "type": Array [
            Number,
          ],
          Symbol(tinspector:decoratorId): Symbol(override),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "method",
      "parameters": Array [],
      "returnType": Array [
        Number,
      ],
      "typeClassification": "Array",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should able to distinguish between static method and instance method with the same name 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [],
      "kind": "StaticMethod",
      "name": "method",
      "parameters": Array [],
      "returnType": undefined,
      "typeClassification": undefined,
    },
    Object {
      "decorators": Array [],
      "kind": "Method",
      "name": "method",
      "parameters": Array [],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should ignore method parameters with this 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "data",
          "index": 0,
          "kind": "Parameter",
          "name": "data",
          "type": Number,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": Number,
      "typeClassification": "Primitive",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect array on constructor parameters 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [
      Object {
        "decorators": Array [
          Object {
            "genericArguments": Array [],
            "kind": "Override",
            "target": DummyClass,
            "type": Array [
              EmptyClass,
            ],
            Symbol(tinspector:decoratorId): Symbol(override),
            Symbol(tinspector:decoratorOption): Object {
              "allowMultiple": false,
              "applyTo": Array [],
              "inherit": true,
              "removeApplied": true,
            },
          },
        ],
        "fields": "empty",
        "index": 0,
        "kind": "Parameter",
        "name": "empty",
        "type": Array [
          EmptyClass,
        ],
        "typeClassification": "Array",
      },
    ],
  },
  "decorators": Array [
    Object {
      Symbol(tinspector:decoratorOption): Object {
        "allowMultiple": true,
        "applyTo": Array [],
        "inherit": true,
        "removeApplied": true,
      },
    },
  ],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect array on method parameter 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [
            Object {
              "genericArguments": Array [],
              "kind": "Override",
              "target": DummyClass,
              "type": Array [
                EmptyClass,
              ],
              Symbol(tinspector:decoratorId): Symbol(override),
              Symbol(tinspector:decoratorOption): Object {
                "allowMultiple": false,
                "applyTo": Array [],
                "inherit": true,
                "removeApplied": true,
              },
            },
          ],
          "fields": "empty",
          "index": 0,
          "kind": "Parameter",
          "name": "empty",
          "type": Array [
            EmptyClass,
          ],
          "typeClassification": "Array",
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect array on method parameter but without type override 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "empty",
          "index": 0,
          "kind": "Parameter",
          "name": "empty",
          "type": Array [
            Object,
          ],
          "typeClassification": "Array",
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect array on method parameter using @reflect.type 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [
            Object {
              "genericArguments": Array [],
              "kind": "Override",
              "target": DummyClass,
              "type": Array [
                EmptyClass,
              ],
              Symbol(tinspector:decoratorId): Symbol(override),
              Symbol(tinspector:decoratorOption): Object {
                "allowMultiple": false,
                "applyTo": Array [],
                "inherit": true,
                "removeApplied": true,
              },
            },
          ],
          "fields": "empty",
          "index": 0,
          "kind": "Parameter",
          "name": "empty",
          "type": Array [
            EmptyClass,
          ],
          "typeClassification": "Array",
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect async method with parameters 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "dummy",
          "index": 0,
          "kind": "Parameter",
          "name": "dummy",
          "type": String,
          "typeClassification": "Primitive",
        },
        Object {
          "decorators": Array [],
          "fields": "other",
          "index": 1,
          "kind": "Parameter",
          "name": "other",
          "type": Object,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": Promise,
      "typeClassification": "Class",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect class properly 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect class with constructor parameters 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [
      Object {
        "decorators": Array [],
        "fields": "id",
        "index": 0,
        "kind": "Parameter",
        "name": "id",
        "type": undefined,
        "typeClassification": undefined,
      },
      Object {
        "decorators": Array [],
        "fields": "name",
        "index": 1,
        "kind": "Parameter",
        "name": "name",
        "type": undefined,
        "typeClassification": undefined,
      },
    ],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect class with method parameters 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "dummy",
          "index": 0,
          "kind": "Parameter",
          "name": "dummy",
          "type": undefined,
          "typeClassification": undefined,
        },
        Object {
          "decorators": Array [],
          "fields": "other",
          "index": 1,
          "kind": "Parameter",
          "name": "other",
          "type": undefined,
          "typeClassification": undefined,
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect constructor parameters type with decorator 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [
      Object {
        "decorators": Array [],
        "fields": "id",
        "index": 0,
        "kind": "Parameter",
        "name": "id",
        "type": Number,
        "typeClassification": "Primitive",
      },
      Object {
        "decorators": Array [],
        "fields": "name",
        "index": 1,
        "kind": "Parameter",
        "name": "name",
        "type": String,
        "typeClassification": "Primitive",
      },
    ],
  },
  "decorators": Array [
    Object {
      Symbol(tinspector:decoratorOption): Object {
        "allowMultiple": true,
        "applyTo": Array [],
        "inherit": true,
        "removeApplied": true,
      },
    },
  ],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect deep nested destructed method parameter type 1`] = `
Object {
  "decorators": Array [
    Object {
      "genericArguments": Array [],
      "kind": "Override",
      "target": DummyClass,
      "type": Domain,
      Symbol(tinspector:decoratorId): Symbol(override),
      Symbol(tinspector:decoratorOption): Object {
        "allowMultiple": false,
        "applyTo": Array [],
        "inherit": true,
        "removeApplied": true,
      },
    },
  ],
  "fields": Array [
    "a",
    "b",
    Object {
      "tuple": Array [
        "name",
        Array [
          "a1",
          "b1",
        ],
      ],
    },
    Object {
      "child": Array [
        "c",
        "d",
        Object {
          "child": Array [
            "e",
            "f",
          ],
        },
      ],
    },
  ],
  "index": 0,
  "kind": "Parameter",
  "name": "{ a, b, tuple: [name, { a1, b1 }], child: { c, d, child: { e, f } } }",
  "type": Domain,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect destructed method parameter type 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [
            Object {
              "genericArguments": Array [],
              "kind": "Override",
              "target": DummyClass,
              "type": Domain,
              Symbol(tinspector:decoratorId): Symbol(override),
              Symbol(tinspector:decoratorOption): Object {
                "allowMultiple": false,
                "applyTo": Array [],
                "inherit": true,
                "removeApplied": true,
              },
            },
          ],
          "fields": Array [
            "date",
            "name",
          ],
          "index": 0,
          "kind": "Parameter",
          "name": "{ date, name }",
          "type": Domain,
          "typeClassification": "Class",
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect destructed parameters type with method decorator 1`] = `
Object {
  "decorators": Array [],
  "fields": Array [
    "date",
    "name",
  ],
  "index": 0,
  "kind": "Parameter",
  "name": "{ date, name }",
  "type": Domain,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect getter and setter 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [],
      "get": get myProp,
      "kind": "Property",
      "name": "myProp",
      "set": set myProp,
      "type": undefined,
      "typeClassification": undefined,
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect getter and setter with decorator 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "get": get myProp,
      "kind": "Property",
      "name": "myProp",
      "set": set myProp,
      "type": Number,
      "typeClassification": "Primitive",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect parameter properties 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [
      Object {
        "decorators": Array [],
        "fields": "myProp",
        "index": 0,
        "kind": "Parameter",
        "name": "myProp",
        "type": Number,
        "typeClassification": "Primitive",
      },
      Object {
        "decorators": Array [],
        "fields": "myOtherProp",
        "index": 1,
        "kind": "Parameter",
        "name": "myOtherProp",
        "type": String,
        "typeClassification": "Primitive",
      },
    ],
  },
  "decorators": Array [
    Object {
      "type": "ParameterProperties",
      Symbol(tinspector:decoratorId): Symbol(paramProp),
      Symbol(tinspector:decoratorOption): Object {
        "allowMultiple": false,
        "applyTo": Array [],
        "inherit": true,
        "removeApplied": true,
      },
    },
  ],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [],
      "get": undefined,
      "index": 0,
      "isParameter": true,
      "kind": "Property",
      "name": "myProp",
      "set": undefined,
      "type": Number,
      "typeClassification": "Primitive",
    },
    Object {
      "decorators": Array [],
      "get": undefined,
      "index": 1,
      "isParameter": true,
      "kind": "Property",
      "name": "myOtherProp",
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect parameters type with method decorator 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": true,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "Method",
      "name": "dummyMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "dummy",
          "index": 0,
          "kind": "Parameter",
          "name": "dummy",
          "type": String,
          "typeClassification": "Primitive",
        },
        Object {
          "decorators": Array [],
          "fields": "other",
          "index": 1,
          "kind": "Parameter",
          "name": "other",
          "type": Object,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": Number,
      "typeClassification": "Primitive",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect property 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "get": undefined,
      "kind": "Property",
      "name": "myProp",
      "set": undefined,
      "type": Number,
      "typeClassification": "Primitive",
    },
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "get": undefined,
      "kind": "Property",
      "name": "myOtherProp",
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect setter only 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [],
      "get": undefined,
      "kind": "Property",
      "name": "myProp",
      "set": set myProp,
      "type": undefined,
      "typeClassification": undefined,
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static getter and setter 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [],
      "get": get myProp,
      "kind": "StaticProperty",
      "name": "myProp",
      "set": set myProp,
      "type": undefined,
      "typeClassification": undefined,
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static getter and setter type 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "get": get myProp,
      "kind": "StaticProperty",
      "name": "myProp",
      "set": set myProp,
      "type": Number,
      "typeClassification": "Primitive",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static method 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [],
      "kind": "StaticMethod",
      "name": "myStaticMethod",
      "parameters": Array [],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static method return type with decorator 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "kind": "StaticMethod",
      "name": "myStaticMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "par1",
          "index": 0,
          "kind": "Parameter",
          "name": "par1",
          "type": Number,
          "typeClassification": "Primitive",
        },
        Object {
          "decorators": Array [],
          "fields": "par2",
          "index": 1,
          "kind": "Parameter",
          "name": "par2",
          "type": String,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": Number,
      "typeClassification": "Primitive",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static method return type with decorator override 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          "genericArguments": Array [],
          "kind": "Override",
          "target": DummyClass,
          "type": Array [
            Number,
          ],
          Symbol(tinspector:decoratorId): Symbol(override),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "kind": "StaticMethod",
      "name": "myStaticMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "par1",
          "index": 0,
          "kind": "Parameter",
          "name": "par1",
          "type": Number,
          "typeClassification": "Primitive",
        },
        Object {
          "decorators": Array [],
          "fields": "par2",
          "index": 1,
          "kind": "Parameter",
          "name": "par2",
          "type": String,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": Array [
        Number,
      ],
      "typeClassification": "Array",
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static method's parameter type with decorator 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "kind": "StaticMethod",
      "name": "myStaticMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "par1",
          "index": 0,
          "kind": "Parameter",
          "name": "par1",
          "type": Number,
          "typeClassification": "Primitive",
        },
        Object {
          "decorators": Array [],
          "fields": "par2",
          "index": 1,
          "kind": "Parameter",
          "name": "par2",
          "type": String,
          "typeClassification": "Primitive",
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static method's parameters  1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [
    Object {
      "decorators": Array [],
      "kind": "StaticMethod",
      "name": "myStaticMethod",
      "parameters": Array [
        Object {
          "decorators": Array [],
          "fields": "par1",
          "index": 0,
          "kind": "Parameter",
          "name": "par1",
          "type": undefined,
          "typeClassification": undefined,
        },
        Object {
          "decorators": Array [],
          "fields": "par2",
          "index": 1,
          "kind": "Parameter",
          "name": "par2",
          "type": undefined,
          "typeClassification": undefined,
        },
      ],
      "returnType": undefined,
      "typeClassification": undefined,
    },
  ],
  "name": "DummyClass",
  "properties": Array [],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static property 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [
        Object {
          "kind": "Noop",
          "target": DummyClass,
          Symbol(tinspector:decoratorId): Symbol(noop),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": false,
            "removeApplied": true,
          },
        },
      ],
      "get": undefined,
      "kind": "StaticProperty",
      "name": "myProp",
      "set": undefined,
      "type": String,
      "typeClassification": "Primitive",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should inspect static property type with decorator override 1`] = `
Object {
  "ctor": Object {
    "kind": "Constructor",
    "name": "constructor",
    "parameters": Array [],
  },
  "decorators": Array [],
  "kind": "Class",
  "methods": Array [],
  "name": "DummyClass",
  "properties": Array [
    Object {
      "decorators": Array [
        Object {
          "genericArguments": Array [],
          "kind": "Override",
          "target": DummyClass,
          "type": Array [
            Number,
          ],
          Symbol(tinspector:decoratorId): Symbol(override),
          Symbol(tinspector:decoratorOption): Object {
            "allowMultiple": false,
            "applyTo": Array [],
            "inherit": true,
            "removeApplied": true,
          },
        },
      ],
      "get": undefined,
      "kind": "StaticProperty",
      "name": "myProp",
      "set": undefined,
      "type": Array [
        Number,
      ],
      "typeClassification": "Array",
    },
  ],
  "super": Object,
  "type": DummyClass,
  "typeClassification": "Class",
}
`;

exports[`Class Introspection Should reflect destructed tuple parameters type 1`] = `
Object {
  "decorators": Array [],
  "fields": Array [
    "name",
    "age",
  ],
  "index": 0,
  "kind": "Parameter",
  "name": "[name, age]",
  "type": Array [
    Object,
  ],
  "typeClassification": "Array",
}
`;
