// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Definition Error Handling Should throw error when reference type not registered in nested array 1`] = `"MONG1000: Type Dummy required type Nest which is not registered as Mongoose model"`;

exports[`Definition Error Handling Should throw error when reference type not registered in nested model 1`] = `"MONG1000: Type Dummy required type Nest which is not registered as Mongoose model"`;

exports[`Definition Nested Data Type Should able to define nested object array with ref (populate) 1`] = `
Object {
  "children": Array [
    Object {
      "ref": "Nest",
      "type": ObjectID,
    },
  ],
}
`;

exports[`Definition Nested Data Type Should able to define nested object with ref (populate) 1`] = `
Object {
  "child": Object {
    "ref": "Nest",
    "type": ObjectID,
  },
}
`;

exports[`Definition Nested Data Type Should able to extract nested object 1`] = `
Object {
  "child": Object {
    "dateProp": Object {
      "type": Date,
    },
    "stringProp": Object {
      "type": String,
    },
  },
}
`;

exports[`Definition Nested Data Type Should able to extract nested object with schema option 1`] = `
Object {
  "child": Object {
    "dateProp": Object {
      "type": Date,
    },
    "stringProp": Object {
      "default": "123",
      "type": String,
      "uppercase": true,
    },
  },
}
`;

exports[`Definition Primitive Data Type Should able to add schema configuration 1`] = `
Object {
  "stringProp": Object {
    "default": "123",
    "type": String,
    "uppercase": true,
  },
}
`;

exports[`Definition Primitive Data Type Should able to extract array of primitive types definition 1`] = `
Object {
  "booleanProp": Array [
    Object {
      "type": String,
    },
  ],
  "dateProp": Array [
    Object {
      "type": String,
    },
  ],
  "numberProp": Array [
    Object {
      "type": String,
    },
  ],
  "stringProp": Array [
    Object {
      "type": String,
    },
  ],
}
`;

exports[`Definition Primitive Data Type Should able to extract primitive types definition 1`] = `
Object {
  "booleanProp": Object {
    "type": Boolean,
  },
  "dateProp": Object {
    "type": Date,
  },
  "numberProp": Object {
    "type": Number,
  },
  "stringProp": Object {
    "type": String,
  },
}
`;

exports[`Definition Primitive Data Type Should use object if no type definition found 1`] = `
Object {
  "stringProp": Array [
    Object {
      "type": Object,
    },
  ],
}
`;
